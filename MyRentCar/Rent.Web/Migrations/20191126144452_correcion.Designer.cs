// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rent.Web.Data.Entities;

namespace Rent.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191126144452_correcion")]
    partial class correcion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rent.Web.Data.Entities.MarcaVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MarcaVehiculos");
                });

            modelBuilder.Entity("Rent.Web.Data.Entities.VehiculoCaracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estatus")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("VehiculoCaracteristicas");
                });

            modelBuilder.Entity("Rent.Web.Data.Entities.VehiculoPublicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("vehiculoPublicacions");
                });

            modelBuilder.Entity("Rent.Web.Data.ModeloVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca");

                    b.HasKey("Id");

                    b.ToTable("ModeloVehiculos");
                });

            modelBuilder.Entity("Rent.Web.Data.TiposVehiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposVehiculos");
                });

            modelBuilder.Entity("Rent.Web.Data.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anio_Vehiculo");

                    b.Property<string>("Color");

                    b.Property<string>("Descripcion");

                    b.Property<string>("ImagenUrl");

                    b.Property<string>("Kilometraje");

                    b.Property<int?>("MarcaVehiculosId");

                    b.Property<int?>("ModeloVehiculosId");

                    b.Property<string>("NoPlaca");

                    b.Property<string>("No_Chasis");

                    b.Property<string>("NombreVehiculo");

                    b.Property<double>("Precio");

                    b.Property<int?>("TiposVehiculosId");

                    b.Property<int?>("VehiculoCaracteristicasId");

                    b.Property<int?>("VehiculoPublicacionsId");

                    b.HasKey("Id");

                    b.HasIndex("MarcaVehiculosId");

                    b.HasIndex("ModeloVehiculosId");

                    b.HasIndex("TiposVehiculosId");

                    b.HasIndex("VehiculoCaracteristicasId");

                    b.HasIndex("VehiculoPublicacionsId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Rent.Web.Data.Vehiculo", b =>
                {
                    b.HasOne("Rent.Web.Data.Entities.MarcaVehiculo", "MarcaVehiculos")
                        .WithMany("vehiculos")
                        .HasForeignKey("MarcaVehiculosId");

                    b.HasOne("Rent.Web.Data.ModeloVehiculo", "ModeloVehiculos")
                        .WithMany("vehiculos")
                        .HasForeignKey("ModeloVehiculosId");

                    b.HasOne("Rent.Web.Data.TiposVehiculos", "TiposVehiculos")
                        .WithMany("vehiculos")
                        .HasForeignKey("TiposVehiculosId");

                    b.HasOne("Rent.Web.Data.Entities.VehiculoCaracteristica", "VehiculoCaracteristicas")
                        .WithMany("Vehiculos")
                        .HasForeignKey("VehiculoCaracteristicasId");

                    b.HasOne("Rent.Web.Data.Entities.VehiculoPublicacion", "VehiculoPublicacions")
                        .WithMany("Vehiculos")
                        .HasForeignKey("VehiculoPublicacionsId");
                });
#pragma warning restore 612, 618
        }
    }
}
